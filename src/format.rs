use std::fmt;

use serde::{Serialize, Deserialize, Serializer, Deserializer};
use serde::de::{self, Visitor, Unexpected};

use ash::vk;

/// The format.
#[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash, Default)]
pub struct HalaFormat(i32);
impl HalaFormat {
  pub const UNDEFINED: Self = Self(vk::Format::UNDEFINED.as_raw());
  pub const R4G4_UNORM_PACK8: Self = Self(vk::Format::R4G4_UNORM_PACK8.as_raw());
  pub const R4G4B4A4_UNORM_PACK16: Self = Self(vk::Format::R4G4B4A4_UNORM_PACK16.as_raw());
  pub const B4G4R4A4_UNORM_PACK16: Self = Self(vk::Format::B4G4R4A4_UNORM_PACK16.as_raw());
  pub const R5G6B5_UNORM_PACK16: Self = Self(vk::Format::R5G6B5_UNORM_PACK16.as_raw());
  pub const B5G6R5_UNORM_PACK16: Self = Self(vk::Format::B5G6R5_UNORM_PACK16.as_raw());
  pub const R5G5B5A1_UNORM_PACK16: Self = Self(vk::Format::R5G5B5A1_UNORM_PACK16.as_raw());
  pub const B5G5R5A1_UNORM_PACK16: Self = Self(vk::Format::B5G5R5A1_UNORM_PACK16.as_raw());
  pub const A1R5G5B5_UNORM_PACK16: Self = Self(vk::Format::A1R5G5B5_UNORM_PACK16.as_raw());
  pub const R8_UNORM: Self = Self(vk::Format::R8_UNORM.as_raw());
  pub const R8_SNORM: Self = Self(vk::Format::R8_SNORM.as_raw());
  pub const R8_USCALED: Self = Self(vk::Format::R8_USCALED.as_raw());
  pub const R8_SSCALED: Self = Self(vk::Format::R8_SSCALED.as_raw());
  pub const R8_UINT: Self = Self(vk::Format::R8_UINT.as_raw());
  pub const R8_SINT: Self = Self(vk::Format::R8_SINT.as_raw());
  pub const R8_SRGB: Self = Self(vk::Format::R8_SRGB.as_raw());
  pub const R8G8_UNORM: Self = Self(vk::Format::R8G8_UNORM.as_raw());
  pub const R8G8_SNORM: Self = Self(vk::Format::R8G8_SNORM.as_raw());
  pub const R8G8_USCALED: Self = Self(vk::Format::R8G8_USCALED.as_raw());
  pub const R8G8_SSCALED: Self = Self(vk::Format::R8G8_SSCALED.as_raw());
  pub const R8G8_UINT: Self = Self(vk::Format::R8G8_UINT.as_raw());
  pub const R8G8_SINT: Self = Self(vk::Format::R8G8_SINT.as_raw());
  pub const R8G8_SRGB: Self = Self(vk::Format::R8G8_SRGB.as_raw());
  pub const R8G8B8_UNORM: Self = Self(vk::Format::R8G8B8_UNORM.as_raw());
  pub const R8G8B8_SNORM: Self = Self(vk::Format::R8G8B8_SNORM.as_raw());
  pub const R8G8B8_USCALED: Self = Self(vk::Format::R8G8B8_USCALED.as_raw());
  pub const R8G8B8_SSCALED: Self = Self(vk::Format::R8G8B8_SSCALED.as_raw());
  pub const R8G8B8_UINT: Self = Self(vk::Format::R8G8B8_UINT.as_raw());
  pub const R8G8B8_SINT: Self = Self(vk::Format::R8G8B8_SINT.as_raw());
  pub const R8G8B8_SRGB: Self = Self(vk::Format::R8G8B8_SRGB.as_raw());
  pub const B8G8R8_UNORM: Self = Self(vk::Format::B8G8R8_UNORM.as_raw());
  pub const B8G8R8_SNORM: Self = Self(vk::Format::B8G8R8_SNORM.as_raw());
  pub const B8G8R8_USCALED: Self = Self(vk::Format::B8G8R8_USCALED.as_raw());
  pub const B8G8R8_SSCALED: Self = Self(vk::Format::B8G8R8_SSCALED.as_raw());
  pub const B8G8R8_UINT: Self = Self(vk::Format::B8G8R8_UINT.as_raw());
  pub const B8G8R8_SINT: Self = Self(vk::Format::B8G8R8_SINT.as_raw());
  pub const B8G8R8_SRGB: Self = Self(vk::Format::B8G8R8_SRGB.as_raw());
  pub const R8G8B8A8_UNORM: Self = Self(vk::Format::R8G8B8A8_UNORM.as_raw());
  pub const R8G8B8A8_SNORM: Self = Self(vk::Format::R8G8B8A8_SNORM.as_raw());
  pub const R8G8B8A8_USCALED: Self = Self(vk::Format::R8G8B8A8_USCALED.as_raw());
  pub const R8G8B8A8_SSCALED: Self = Self(vk::Format::R8G8B8A8_SSCALED.as_raw());
  pub const R8G8B8A8_UINT: Self = Self(vk::Format::R8G8B8A8_UINT.as_raw());
  pub const R8G8B8A8_SINT: Self = Self(vk::Format::R8G8B8A8_SINT.as_raw());
  pub const R8G8B8A8_SRGB: Self = Self(vk::Format::R8G8B8A8_SRGB.as_raw());
  pub const B8G8R8A8_UNORM: Self = Self(vk::Format::B8G8R8A8_UNORM.as_raw());
  pub const B8G8R8A8_SNORM: Self = Self(vk::Format::B8G8R8A8_SNORM.as_raw());
  pub const B8G8R8A8_USCALED: Self = Self(vk::Format::B8G8R8A8_USCALED.as_raw());
  pub const B8G8R8A8_SSCALED: Self = Self(vk::Format::B8G8R8A8_SSCALED.as_raw());
  pub const B8G8R8A8_UINT: Self = Self(vk::Format::B8G8R8A8_UINT.as_raw());
  pub const B8G8R8A8_SINT: Self = Self(vk::Format::B8G8R8A8_SINT.as_raw());
  pub const B8G8R8A8_SRGB: Self = Self(vk::Format::B8G8R8A8_SRGB.as_raw());
  pub const A8B8G8R8_UNORM_PACK32: Self = Self(vk::Format::A8B8G8R8_UNORM_PACK32.as_raw());
  pub const A8B8G8R8_SNORM_PACK32: Self = Self(vk::Format::A8B8G8R8_SNORM_PACK32.as_raw());
  pub const A8B8G8R8_USCALED_PACK32: Self = Self(vk::Format::A8B8G8R8_USCALED_PACK32.as_raw());
  pub const A8B8G8R8_SSCALED_PACK32: Self = Self(vk::Format::A8B8G8R8_SSCALED_PACK32.as_raw());
  pub const A8B8G8R8_UINT_PACK32: Self = Self(vk::Format::A8B8G8R8_UINT_PACK32.as_raw());
  pub const A8B8G8R8_SINT_PACK32: Self = Self(vk::Format::A8B8G8R8_SINT_PACK32.as_raw());
  pub const A8B8G8R8_SRGB_PACK32: Self = Self(vk::Format::A8B8G8R8_SRGB_PACK32.as_raw());
  pub const A2R10G10B10_UNORM_PACK32: Self = Self(vk::Format::A2R10G10B10_UNORM_PACK32.as_raw());
  pub const A2R10G10B10_SNORM_PACK32: Self = Self(vk::Format::A2R10G10B10_SNORM_PACK32.as_raw());
  pub const A2R10G10B10_USCALED_PACK32: Self = Self(vk::Format::A2R10G10B10_USCALED_PACK32.as_raw());
  pub const A2R10G10B10_SSCALED_PACK32: Self = Self(vk::Format::A2R10G10B10_SSCALED_PACK32.as_raw());
  pub const A2R10G10B10_UINT_PACK32: Self = Self(vk::Format::A2R10G10B10_UINT_PACK32.as_raw());
  pub const A2R10G10B10_SINT_PACK32: Self = Self(vk::Format::A2R10G10B10_SINT_PACK32.as_raw());
  pub const A2B10G10R10_UNORM_PACK32: Self = Self(vk::Format::A2B10G10R10_UNORM_PACK32.as_raw());
  pub const A2B10G10R10_SNORM_PACK32: Self = Self(vk::Format::A2B10G10R10_SNORM_PACK32.as_raw());
  pub const A2B10G10R10_USCALED_PACK32: Self = Self(vk::Format::A2B10G10R10_USCALED_PACK32.as_raw());
  pub const A2B10G10R10_SSCALED_PACK32: Self = Self(vk::Format::A2B10G10R10_SSCALED_PACK32.as_raw());
  pub const A2B10G10R10_UINT_PACK32: Self = Self(vk::Format::A2B10G10R10_UINT_PACK32.as_raw());
  pub const A2B10G10R10_SINT_PACK32: Self = Self(vk::Format::A2B10G10R10_SINT_PACK32.as_raw());
  pub const R16_UNORM: Self = Self(vk::Format::R16_UNORM.as_raw());
  pub const R16_SNORM: Self = Self(vk::Format::R16_SNORM.as_raw());
  pub const R16_USCALED: Self = Self(vk::Format::R16_USCALED.as_raw());
  pub const R16_SSCALED: Self = Self(vk::Format::R16_SSCALED.as_raw());
  pub const R16_UINT: Self = Self(vk::Format::R16_UINT.as_raw());
  pub const R16_SINT: Self = Self(vk::Format::R16_SINT.as_raw());
  pub const R16_SFLOAT: Self = Self(vk::Format::R16_SFLOAT.as_raw());
  pub const R16G16_UNORM: Self = Self(vk::Format::R16G16_UNORM.as_raw());
  pub const R16G16_SNORM: Self = Self(vk::Format::R16G16_SNORM.as_raw());
  pub const R16G16_USCALED: Self = Self(vk::Format::R16G16_USCALED.as_raw());
  pub const R16G16_SSCALED: Self = Self(vk::Format::R16G16_SSCALED.as_raw());
  pub const R16G16_UINT: Self = Self(vk::Format::R16G16_UINT.as_raw());
  pub const R16G16_SINT: Self = Self(vk::Format::R16G16_SINT.as_raw());
  pub const R16G16_SFLOAT: Self = Self(vk::Format::R16G16_SFLOAT.as_raw());
  pub const R16G16B16_UNORM: Self = Self(vk::Format::R16G16B16_UNORM.as_raw());
  pub const R16G16B16_SNORM: Self = Self(vk::Format::R16G16B16_SNORM.as_raw());
  pub const R16G16B16_USCALED: Self = Self(vk::Format::R16G16B16_USCALED.as_raw());
  pub const R16G16B16_SSCALED: Self = Self(vk::Format::R16G16B16_SSCALED.as_raw());
  pub const R16G16B16_UINT: Self = Self(vk::Format::R16G16B16_UINT.as_raw());
  pub const R16G16B16_SINT: Self = Self(vk::Format::R16G16B16_SINT.as_raw());
  pub const R16G16B16_SFLOAT: Self = Self(vk::Format::R16G16B16_SFLOAT.as_raw());
  pub const R16G16B16A16_UNORM: Self = Self(vk::Format::R16G16B16A16_UNORM.as_raw());
  pub const R16G16B16A16_SNORM: Self = Self(vk::Format::R16G16B16A16_SNORM.as_raw());
  pub const R16G16B16A16_USCALED: Self = Self(vk::Format::R16G16B16A16_USCALED.as_raw());
  pub const R16G16B16A16_SSCALED: Self = Self(vk::Format::R16G16B16A16_SSCALED.as_raw());
  pub const R16G16B16A16_UINT: Self = Self(vk::Format::R16G16B16A16_UINT.as_raw());
  pub const R16G16B16A16_SINT: Self = Self(vk::Format::R16G16B16A16_SINT.as_raw());
  pub const R16G16B16A16_SFLOAT: Self = Self(vk::Format::R16G16B16A16_SFLOAT.as_raw());
  pub const R32_UINT: Self = Self(vk::Format::R32_UINT.as_raw());
  pub const R32_SINT: Self = Self(vk::Format::R32_SINT.as_raw());
  pub const R32_SFLOAT: Self = Self(vk::Format::R32_SFLOAT.as_raw());
  pub const R32G32_UINT: Self = Self(vk::Format::R32G32_UINT.as_raw());
  pub const R32G32_SINT: Self = Self(vk::Format::R32G32_SINT.as_raw());
  pub const R32G32_SFLOAT: Self = Self(vk::Format::R32G32_SFLOAT.as_raw());
  pub const R32G32B32_UINT: Self = Self(vk::Format::R32G32B32_UINT.as_raw());
  pub const R32G32B32_SINT: Self = Self(vk::Format::R32G32B32_SINT.as_raw());
  pub const R32G32B32_SFLOAT: Self = Self(vk::Format::R32G32B32_SFLOAT.as_raw());
  pub const R32G32B32A32_UINT: Self = Self(vk::Format::R32G32B32A32_UINT.as_raw());
  pub const R32G32B32A32_SINT: Self = Self(vk::Format::R32G32B32A32_SINT.as_raw());
  pub const R32G32B32A32_SFLOAT: Self = Self(vk::Format::R32G32B32A32_SFLOAT.as_raw());
  pub const R64_UINT: Self = Self(vk::Format::R64_UINT.as_raw());
  pub const R64_SINT: Self = Self(vk::Format::R64_SINT.as_raw());
  pub const R64_SFLOAT: Self = Self(vk::Format::R64_SFLOAT.as_raw());
  pub const R64G64_UINT: Self = Self(vk::Format::R64G64_UINT.as_raw());
  pub const R64G64_SINT: Self = Self(vk::Format::R64G64_SINT.as_raw());
  pub const R64G64_SFLOAT: Self = Self(vk::Format::R64G64_SFLOAT.as_raw());
  pub const R64G64B64_UINT: Self = Self(vk::Format::R64G64B64_UINT.as_raw());
  pub const R64G64B64_SINT: Self = Self(vk::Format::R64G64B64_SINT.as_raw());
  pub const R64G64B64_SFLOAT: Self = Self(vk::Format::R64G64B64_SFLOAT.as_raw());
  pub const R64G64B64A64_UINT: Self = Self(vk::Format::R64G64B64A64_UINT.as_raw());
  pub const R64G64B64A64_SINT: Self = Self(vk::Format::R64G64B64A64_SINT.as_raw());
  pub const R64G64B64A64_SFLOAT: Self = Self(vk::Format::R64G64B64A64_SFLOAT.as_raw());
  pub const B10G11R11_UFLOAT_PACK32: Self = Self(vk::Format::B10G11R11_UFLOAT_PACK32.as_raw());
  pub const E5B9G9R9_UFLOAT_PACK32: Self = Self(vk::Format::E5B9G9R9_UFLOAT_PACK32.as_raw());
  pub const D16_UNORM: Self = Self(vk::Format::D16_UNORM.as_raw());
  pub const X8_D24_UNORM_PACK32: Self = Self(vk::Format::X8_D24_UNORM_PACK32.as_raw());
  pub const D32_SFLOAT: Self = Self(vk::Format::D32_SFLOAT.as_raw());
  pub const S8_UINT: Self = Self(vk::Format::S8_UINT.as_raw());
  pub const D16_UNORM_S8_UINT: Self = Self(vk::Format::D16_UNORM_S8_UINT.as_raw());
  pub const D24_UNORM_S8_UINT: Self = Self(vk::Format::D24_UNORM_S8_UINT.as_raw());
  pub const D32_SFLOAT_S8_UINT: Self = Self(vk::Format::D32_SFLOAT_S8_UINT.as_raw());
  pub const BC1_RGB_UNORM_BLOCK: Self = Self(vk::Format::BC1_RGB_UNORM_BLOCK.as_raw());
  pub const BC1_RGB_SRGB_BLOCK: Self = Self(vk::Format::BC1_RGB_SRGB_BLOCK.as_raw());
  pub const BC1_RGBA_UNORM_BLOCK: Self = Self(vk::Format::BC1_RGBA_UNORM_BLOCK.as_raw());
  pub const BC1_RGBA_SRGB_BLOCK: Self = Self(vk::Format::BC1_RGBA_SRGB_BLOCK.as_raw());
  pub const BC2_UNORM_BLOCK: Self = Self(vk::Format::BC2_UNORM_BLOCK.as_raw());
  pub const BC2_SRGB_BLOCK: Self = Self(vk::Format::BC2_SRGB_BLOCK.as_raw());
  pub const BC3_UNORM_BLOCK: Self = Self(vk::Format::BC3_UNORM_BLOCK.as_raw());
  pub const BC3_SRGB_BLOCK: Self = Self(vk::Format::BC3_SRGB_BLOCK.as_raw());
  pub const BC4_UNORM_BLOCK: Self = Self(vk::Format::BC4_UNORM_BLOCK.as_raw());
  pub const BC4_SNORM_BLOCK: Self = Self(vk::Format::BC4_SNORM_BLOCK.as_raw());
  pub const BC5_UNORM_BLOCK: Self = Self(vk::Format::BC5_UNORM_BLOCK.as_raw());
  pub const BC5_SNORM_BLOCK: Self = Self(vk::Format::BC5_SNORM_BLOCK.as_raw());
  pub const BC6H_UFLOAT_BLOCK: Self = Self(vk::Format::BC6H_UFLOAT_BLOCK.as_raw());
  pub const BC6H_SFLOAT_BLOCK: Self = Self(vk::Format::BC6H_SFLOAT_BLOCK.as_raw());
  pub const BC7_UNORM_BLOCK: Self = Self(vk::Format::BC7_UNORM_BLOCK.as_raw());
  pub const BC7_SRGB_BLOCK: Self = Self(vk::Format::BC7_SRGB_BLOCK.as_raw());
  pub const ETC2_R8G8B8_UNORM_BLOCK: Self = Self(vk::Format::ETC2_R8G8B8_UNORM_BLOCK.as_raw());
  pub const ETC2_R8G8B8_SRGB_BLOCK: Self = Self(vk::Format::ETC2_R8G8B8_SRGB_BLOCK.as_raw());
  pub const ETC2_R8G8B8A1_UNORM_BLOCK: Self = Self(vk::Format::ETC2_R8G8B8A1_UNORM_BLOCK.as_raw());
  pub const ETC2_R8G8B8A1_SRGB_BLOCK: Self = Self(vk::Format::ETC2_R8G8B8A1_SRGB_BLOCK.as_raw());
  pub const ETC2_R8G8B8A8_UNORM_BLOCK: Self = Self(vk::Format::ETC2_R8G8B8A8_UNORM_BLOCK.as_raw());
  pub const ETC2_R8G8B8A8_SRGB_BLOCK: Self = Self(vk::Format::ETC2_R8G8B8A8_SRGB_BLOCK.as_raw());
  pub const EAC_R11_UNORM_BLOCK: Self = Self(vk::Format::EAC_R11_UNORM_BLOCK.as_raw());
  pub const EAC_R11_SNORM_BLOCK: Self = Self(vk::Format::EAC_R11_SNORM_BLOCK.as_raw());
  pub const EAC_R11G11_UNORM_BLOCK: Self = Self(vk::Format::EAC_R11G11_UNORM_BLOCK.as_raw());
  pub const EAC_R11G11_SNORM_BLOCK: Self = Self(vk::Format::EAC_R11G11_SNORM_BLOCK.as_raw());
  pub const ASTC_4X4_UNORM_BLOCK: Self = Self(vk::Format::ASTC_4X4_UNORM_BLOCK.as_raw());
  pub const ASTC_4X4_SRGB_BLOCK: Self = Self(vk::Format::ASTC_4X4_SRGB_BLOCK.as_raw());
  pub const ASTC_5X4_UNORM_BLOCK: Self = Self(vk::Format::ASTC_5X4_UNORM_BLOCK.as_raw());
  pub const ASTC_5X4_SRGB_BLOCK: Self = Self(vk::Format::ASTC_5X4_SRGB_BLOCK.as_raw());
  pub const ASTC_5X5_UNORM_BLOCK: Self = Self(vk::Format::ASTC_5X5_UNORM_BLOCK.as_raw());
  pub const ASTC_5X5_SRGB_BLOCK: Self = Self(vk::Format::ASTC_5X5_SRGB_BLOCK.as_raw());
  pub const ASTC_6X5_UNORM_BLOCK: Self = Self(vk::Format::ASTC_6X5_UNORM_BLOCK.as_raw());
  pub const ASTC_6X5_SRGB_BLOCK: Self = Self(vk::Format::ASTC_6X5_SRGB_BLOCK.as_raw());
  pub const ASTC_6X6_UNORM_BLOCK: Self = Self(vk::Format::ASTC_6X6_UNORM_BLOCK.as_raw());
  pub const ASTC_6X6_SRGB_BLOCK: Self = Self(vk::Format::ASTC_6X6_SRGB_BLOCK.as_raw());
  pub const ASTC_8X5_UNORM_BLOCK: Self = Self(vk::Format::ASTC_8X5_UNORM_BLOCK.as_raw());
  pub const ASTC_8X5_SRGB_BLOCK: Self = Self(vk::Format::ASTC_8X5_SRGB_BLOCK.as_raw());
  pub const ASTC_8X6_UNORM_BLOCK: Self = Self(vk::Format::ASTC_8X6_UNORM_BLOCK.as_raw());
  pub const ASTC_8X6_SRGB_BLOCK: Self = Self(vk::Format::ASTC_8X6_SRGB_BLOCK.as_raw());
  pub const ASTC_8X8_UNORM_BLOCK: Self = Self(vk::Format::ASTC_8X8_UNORM_BLOCK.as_raw());
  pub const ASTC_8X8_SRGB_BLOCK: Self = Self(vk::Format::ASTC_8X8_SRGB_BLOCK.as_raw());
  pub const ASTC_10X5_UNORM_BLOCK: Self = Self(vk::Format::ASTC_10X5_UNORM_BLOCK.as_raw());
  pub const ASTC_10X5_SRGB_BLOCK: Self = Self(vk::Format::ASTC_10X5_SRGB_BLOCK.as_raw());
  pub const ASTC_10X6_UNORM_BLOCK: Self = Self(vk::Format::ASTC_10X6_UNORM_BLOCK.as_raw());
  pub const ASTC_10X6_SRGB_BLOCK: Self = Self(vk::Format::ASTC_10X6_SRGB_BLOCK.as_raw());
  pub const ASTC_10X8_UNORM_BLOCK: Self = Self(vk::Format::ASTC_10X8_UNORM_BLOCK.as_raw());
  pub const ASTC_10X8_SRGB_BLOCK: Self = Self(vk::Format::ASTC_10X8_SRGB_BLOCK.as_raw());
  pub const ASTC_10X10_UNORM_BLOCK: Self = Self(vk::Format::ASTC_10X10_UNORM_BLOCK.as_raw());
  pub const ASTC_10X10_SRGB_BLOCK: Self = Self(vk::Format::ASTC_10X10_SRGB_BLOCK.as_raw());
  pub const ASTC_12X10_UNORM_BLOCK: Self = Self(vk::Format::ASTC_12X10_UNORM_BLOCK.as_raw());
  pub const ASTC_12X10_SRGB_BLOCK: Self = Self(vk::Format::ASTC_12X10_SRGB_BLOCK.as_raw());
  pub const ASTC_12X12_UNORM_BLOCK: Self = Self(vk::Format::ASTC_12X12_UNORM_BLOCK.as_raw());
  pub const ASTC_12X12_SRGB_BLOCK: Self = Self(vk::Format::ASTC_12X12_SRGB_BLOCK.as_raw());
}

impl std::fmt::Display for HalaFormat {
  fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
    write!(f, "{:?}", vk::Format::from_raw(self.0))
  }
}

impl std::convert::From<vk::Format> for HalaFormat {
  fn from(val: vk::Format) -> Self {
    Self(val.as_raw())
  }
}

impl std::convert::From<&vk::Format> for HalaFormat {
  fn from(val: &vk::Format) -> Self {
    Self(val.as_raw())
  }
}

impl std::convert::From<HalaFormat> for vk::Format {
  fn from(val: HalaFormat) -> Self {
    vk::Format::from_raw(val.0)
  }
}

impl std::convert::From<&HalaFormat> for vk::Format {
  fn from(val: &HalaFormat) -> Self {
    vk::Format::from_raw(val.0)
  }
}


impl Serialize for HalaFormat {
  fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>
  where
    S: Serializer,
  {
    let s = match *self {
      HalaFormat::UNDEFINED => "undefined",
      HalaFormat::R4G4_UNORM_PACK8 => "r4g4_unorm_pack8",
      HalaFormat::R4G4B4A4_UNORM_PACK16 => "r4g4b4a4_unorm_pack16",
      HalaFormat::B4G4R4A4_UNORM_PACK16 => "b4g4r4a4_unorm_pack16",
      HalaFormat::R5G6B5_UNORM_PACK16 => "r5g6b5_unorm_pack16",
      HalaFormat::B5G6R5_UNORM_PACK16 => "b5g6r5_unorm_pack16",
      HalaFormat::R5G5B5A1_UNORM_PACK16 => "r5g5b5a1_unorm_pack16",
      HalaFormat::B5G5R5A1_UNORM_PACK16 => "b5g5r5a1_unorm_pack16",
      HalaFormat::A1R5G5B5_UNORM_PACK16 => "a1r5g5b5_unorm_pack16",
      HalaFormat::R8_UNORM => "r8_unorm",
      HalaFormat::R8_SNORM => "r8_snorm",
      HalaFormat::R8_USCALED => "r8_uscaled",
      HalaFormat::R8_SSCALED => "r8_sscaled",
      HalaFormat::R8_UINT => "r8_uint",
      HalaFormat::R8_SINT => "r8_sint",
      HalaFormat::R8_SRGB => "r8_srgb",
      HalaFormat::R8G8_UNORM => "r8g8_unorm",
      HalaFormat::R8G8_SNORM => "r8g8_snorm",
      HalaFormat::R8G8_USCALED => "r8g8_uscaled",
      HalaFormat::R8G8_SSCALED => "r8g8_sscaled",
      HalaFormat::R8G8_UINT => "r8g8_uint",
      HalaFormat::R8G8_SINT => "r8g8_sint",
      HalaFormat::R8G8_SRGB => "r8g8_srgb",
      HalaFormat::R8G8B8_UNORM => "r8g8b8_unorm",
      HalaFormat::R8G8B8_SNORM => "r8g8b8_snorm",
      HalaFormat::R8G8B8_USCALED => "r8g8b8_uscaled",
      HalaFormat::R8G8B8_SSCALED => "r8g8b8_sscaled",
      HalaFormat::R8G8B8_UINT => "r8g8b8_uint",
      HalaFormat::R8G8B8_SINT => "r8g8b8_sint",
      HalaFormat::R8G8B8_SRGB => "r8g8b8_srgb",
      HalaFormat::B8G8R8_UNORM => "b8g8r8_unorm",
      HalaFormat::B8G8R8_SNORM => "b8g8r8_snorm",
      HalaFormat::B8G8R8_USCALED => "b8g8r8_uscaled",
      HalaFormat::B8G8R8_SSCALED => "b8g8r8_sscaled",
      HalaFormat::B8G8R8_UINT => "b8g8r8_uint",
      HalaFormat::B8G8R8_SINT => "b8g8r8_sint",
      HalaFormat::B8G8R8_SRGB => "b8g8r8_srgb",
      HalaFormat::R8G8B8A8_UNORM => "r8g8b8a8_unorm",
      HalaFormat::R8G8B8A8_SNORM => "r8g8b8a8_snorm",
      HalaFormat::R8G8B8A8_USCALED => "r8g8b8a8_uscaled",
      HalaFormat::R8G8B8A8_SSCALED => "r8g8b8a8_sscaled",
      HalaFormat::R8G8B8A8_UINT => "r8g8b8a8_uint",
      HalaFormat::R8G8B8A8_SINT => "r8g8b8a8_sint",
      HalaFormat::R8G8B8A8_SRGB => "r8g8b8a8_srgb",
      HalaFormat::B8G8R8A8_UNORM => "b8g8r8a8_unorm",
      HalaFormat::B8G8R8A8_SNORM => "b8g8r8a8_snorm",
      HalaFormat::B8G8R8A8_USCALED => "b8g8r8a8_uscaled",
      HalaFormat::B8G8R8A8_SSCALED => "b8g8r8a8_sscaled",
      HalaFormat::B8G8R8A8_UINT => "b8g8r8a8_uint",
      HalaFormat::B8G8R8A8_SINT => "b8g8r8a8_sint",
      HalaFormat::B8G8R8A8_SRGB => "b8g8r8a8_srgb",
      HalaFormat::A8B8G8R8_UNORM_PACK32 => "a8b8g8r8_unorm_pack32",
      HalaFormat::A8B8G8R8_SNORM_PACK32 => "a8b8g8r8_snorm_pack32",
      HalaFormat::A8B8G8R8_USCALED_PACK32 => "a8b8g8r8_uscaled_pack32",
      HalaFormat::A8B8G8R8_SSCALED_PACK32 => "a8b8g8r8_sscaled_pack32",
      HalaFormat::A8B8G8R8_UINT_PACK32 => "a8b8g8r8_uint_pack32",
      HalaFormat::A8B8G8R8_SINT_PACK32 => "a8b8g8r8_sint_pack32",
      HalaFormat::A8B8G8R8_SRGB_PACK32 => "a8b8g8r8_srgb_pack32",
      HalaFormat::A2R10G10B10_UNORM_PACK32 => "a2r10g10b10_unorm_pack32",
      HalaFormat::A2R10G10B10_SNORM_PACK32 => "a2r10g10b10_snorm_pack32",
      HalaFormat::A2R10G10B10_USCALED_PACK32 => "a2r10g10b10_uscaled_pack32",
      HalaFormat::A2R10G10B10_SSCALED_PACK32 => "a2r10g10b10_sscaled_pack32",
      HalaFormat::A2R10G10B10_UINT_PACK32 => "a2r10g10b10_uint_pack32",
      HalaFormat::A2R10G10B10_SINT_PACK32 => "a2r10g10b10_sint_pack32",
      HalaFormat::A2B10G10R10_UNORM_PACK32 => "a2b10g10r10_unorm_pack32",
      HalaFormat::A2B10G10R10_SNORM_PACK32 => "a2b10g10r10_snorm_pack32",
      HalaFormat::A2B10G10R10_USCALED_PACK32 => "a2b10g10r10_uscaled_pack32",
      HalaFormat::A2B10G10R10_SSCALED_PACK32 => "a2b10g10r10_sscaled_pack32",
      HalaFormat::A2B10G10R10_UINT_PACK32 => "a2b10g10r10_uint_pack32",
      HalaFormat::A2B10G10R10_SINT_PACK32 => "a2b10g10r10_sint_pack32",
      HalaFormat::R16_UNORM => "r16_unorm",
      HalaFormat::R16_SNORM => "r16_snorm",
      HalaFormat::R16_USCALED => "r16_uscaled",
      HalaFormat::R16_SSCALED => "r16_sscaled",
      HalaFormat::R16_UINT => "r16_uint",
      HalaFormat::R16_SINT => "r16_sint",
      HalaFormat::R16_SFLOAT => "r16_sfloat",
      HalaFormat::R16G16_UNORM => "r16g16_unorm",
      HalaFormat::R16G16_SNORM => "r16g16_snorm",
      HalaFormat::R16G16_USCALED => "r16g16_uscaled",
      HalaFormat::R16G16_SSCALED => "r16g16_sscaled",
      HalaFormat::R16G16_UINT => "r16g16_uint",
      HalaFormat::R16G16_SINT => "r16g16_sint",
      HalaFormat::R16G16_SFLOAT => "r16g16_sfloat",
      HalaFormat::R16G16B16_UNORM => "r16g16b16_unorm",
      HalaFormat::R16G16B16_SNORM => "r16g16b16_snorm",
      HalaFormat::R16G16B16_USCALED => "r16g16b16_uscaled",
      HalaFormat::R16G16B16_SSCALED => "r16g16b16_sscaled",
      HalaFormat::R16G16B16_UINT => "r16g16b16_uint",
      HalaFormat::R16G16B16_SINT => "r16g16b16_sint",
      HalaFormat::R16G16B16_SFLOAT => "r16g16b16_sfloat",
      HalaFormat::R16G16B16A16_UNORM => "r16g16b16a16_unorm",
      HalaFormat::R16G16B16A16_SNORM => "r16g16b16a16_snorm",
      HalaFormat::R16G16B16A16_USCALED => "r16g16b16a16_uscaled",
      HalaFormat::R16G16B16A16_SSCALED => "r16g16b16a16_sscaled",
      HalaFormat::R16G16B16A16_UINT => "r16g16b16a16_uint",
      HalaFormat::R16G16B16A16_SINT => "r16g16b16a16_sint",
      HalaFormat::R16G16B16A16_SFLOAT => "r16g16b16a16_sfloat",
      HalaFormat::R32_UINT => "r32_uint",
      HalaFormat::R32_SINT => "r32_sint",
      HalaFormat::R32_SFLOAT => "r32_sfloat",
      HalaFormat::R32G32_UINT => "r32g32_uint",
      HalaFormat::R32G32_SINT => "r32g32_sint",
      HalaFormat::R32G32_SFLOAT => "r32g32_sfloat",
      HalaFormat::R32G32B32_UINT => "r32g32b32_uint",
      HalaFormat::R32G32B32_SINT => "r32g32b32_sint",
      HalaFormat::R32G32B32_SFLOAT => "r32g32b32_sfloat",
      HalaFormat::R32G32B32A32_UINT => "r32g32b32a32_uint",
      HalaFormat::R32G32B32A32_SINT => "r32g32b32a32_sint",
      HalaFormat::R32G32B32A32_SFLOAT => "r32g32b32a32_sfloat",
      HalaFormat::R64_UINT => "r64_uint",
      HalaFormat::R64_SINT => "r64_sint",
      HalaFormat::R64_SFLOAT => "r64_sfloat",
      HalaFormat::R64G64_UINT => "r64g64_uint",
      HalaFormat::R64G64_SINT => "r64g64_sint",
      HalaFormat::R64G64_SFLOAT => "r64g64_sfloat",
      HalaFormat::R64G64B64_UINT => "r64g64b64_uint",
      HalaFormat::R64G64B64_SINT => "r64g64b64_sint",
      HalaFormat::R64G64B64_SFLOAT => "r64g64b64_sfloat",
      HalaFormat::R64G64B64A64_UINT => "r64g64b64a64_uint",
      HalaFormat::R64G64B64A64_SINT => "r64g64b64a64_sint",
      HalaFormat::R64G64B64A64_SFLOAT => "r64g64b64a64_sfloat",
      HalaFormat::B10G11R11_UFLOAT_PACK32 => "b10g11r11_ufloat_pack32",
      HalaFormat::E5B9G9R9_UFLOAT_PACK32 => "e5b9g9r9_ufloat_pack32",
      HalaFormat::D16_UNORM => "d16_unorm",
      HalaFormat::X8_D24_UNORM_PACK32 => "x8_d24_unorm_pack32",
      HalaFormat::D32_SFLOAT => "d32_sfloat",
      HalaFormat::S8_UINT => "s8_uint",
      HalaFormat::D16_UNORM_S8_UINT => "d16_unorm_s8_uint",
      HalaFormat::D24_UNORM_S8_UINT => "d24_unorm_s8_uint",
      HalaFormat::D32_SFLOAT_S8_UINT => "d32_sfloat_s8_uint",
      HalaFormat::BC1_RGB_UNORM_BLOCK => "bc1_rgb_unorm_block",
      HalaFormat::BC1_RGB_SRGB_BLOCK => "bc1_rgb_srgb_block",
      HalaFormat::BC1_RGBA_UNORM_BLOCK => "bc1_rgba_unorm_block",
      HalaFormat::BC1_RGBA_SRGB_BLOCK => "bc1_rgba_srgb_block",
      HalaFormat::BC2_UNORM_BLOCK => "bc2_unorm_block",
      HalaFormat::BC2_SRGB_BLOCK => "bc2_srgb_block",
      HalaFormat::BC3_UNORM_BLOCK => "bc3_unorm_block",
      HalaFormat::BC3_SRGB_BLOCK => "bc3_srgb_block",
      HalaFormat::BC4_UNORM_BLOCK => "bc4_unorm_block",
      HalaFormat::BC4_SNORM_BLOCK => "bc4_snorm_block",
      HalaFormat::BC5_UNORM_BLOCK => "bc5_unorm_block",
      HalaFormat::BC5_SNORM_BLOCK => "bc5_snorm_block",
      HalaFormat::BC6H_UFLOAT_BLOCK => "bc6h_ufloat_block",
      HalaFormat::BC6H_SFLOAT_BLOCK => "bc6h_sfloat_block",
      HalaFormat::BC7_UNORM_BLOCK => "bc7_unorm_block",
      HalaFormat::BC7_SRGB_BLOCK => "bc7_srgb_block",
      HalaFormat::ETC2_R8G8B8_UNORM_BLOCK => "etc2_r8g8b8_unorm_block",
      HalaFormat::ETC2_R8G8B8_SRGB_BLOCK => "etc2_r8g8b8_srgb_block",
      HalaFormat::ETC2_R8G8B8A1_UNORM_BLOCK => "etc2_r8g8b8a1_unorm_block",
      HalaFormat::ETC2_R8G8B8A1_SRGB_BLOCK => "etc2_r8g8b8a1_srgb_block",
      HalaFormat::ETC2_R8G8B8A8_UNORM_BLOCK => "etc2_r8g8b8a8_unorm_block",
      HalaFormat::ETC2_R8G8B8A8_SRGB_BLOCK => "etc2_r8g8b8a8_srgb_block",
      HalaFormat::EAC_R11_UNORM_BLOCK => "eac_r11_unorm_block",
      HalaFormat::EAC_R11_SNORM_BLOCK => "eac_r11_snorm_block",
      HalaFormat::EAC_R11G11_UNORM_BLOCK => "eac_r11g11_unorm_block",
      HalaFormat::EAC_R11G11_SNORM_BLOCK => "eac_r11g11_snorm_block",
      HalaFormat::ASTC_4X4_UNORM_BLOCK => "astc_4x4_unorm_block",
      HalaFormat::ASTC_4X4_SRGB_BLOCK => "astc_4x4_srgb_block",
      HalaFormat::ASTC_5X4_UNORM_BLOCK => "astc_5x4_unorm_block",
      HalaFormat::ASTC_5X4_SRGB_BLOCK => "astc_5x4_srgb_block",
      HalaFormat::ASTC_5X5_UNORM_BLOCK => "astc_5x5_unorm_block",
      HalaFormat::ASTC_5X5_SRGB_BLOCK => "astc_5x5_srgb_block",
      HalaFormat::ASTC_6X5_UNORM_BLOCK => "astc_6x5_unorm_block",
      HalaFormat::ASTC_6X5_SRGB_BLOCK => "astc_6x5_srgb_block",
      HalaFormat::ASTC_6X6_UNORM_BLOCK => "astc_6x6_unorm_block",
      HalaFormat::ASTC_6X6_SRGB_BLOCK => "astc_6x6_srgb_block",
      HalaFormat::ASTC_8X5_UNORM_BLOCK => "astc_8x5_unorm_block",
      HalaFormat::ASTC_8X5_SRGB_BLOCK => "astc_8x5_srgb_block",
      HalaFormat::ASTC_8X6_UNORM_BLOCK => "astc_8x6_unorm_block",
      HalaFormat::ASTC_8X6_SRGB_BLOCK => "astc_8x6_srgb_block",
      HalaFormat::ASTC_8X8_UNORM_BLOCK => "astc_8x8_unorm_block",
      HalaFormat::ASTC_8X8_SRGB_BLOCK => "astc_8x8_srgb_block",
      HalaFormat::ASTC_10X5_UNORM_BLOCK => "astc_10x5_unorm_block",
      HalaFormat::ASTC_10X5_SRGB_BLOCK => "astc_10x5_srgb_block",
      HalaFormat::ASTC_10X6_UNORM_BLOCK => "astc_10x6_unorm_block",
      HalaFormat::ASTC_10X6_SRGB_BLOCK => "astc_10x6_srgb_block",
      HalaFormat::ASTC_10X8_UNORM_BLOCK => "astc_10x8_unorm_block",
      HalaFormat::ASTC_10X8_SRGB_BLOCK => "astc_10x8_srgb_block",
      HalaFormat::ASTC_10X10_UNORM_BLOCK => "astc_10x10_unorm_block",
      HalaFormat::ASTC_10X10_SRGB_BLOCK => "astc_10x10_srgb_block",
      HalaFormat::ASTC_12X10_UNORM_BLOCK => "astc_12x10_unorm_block",
      HalaFormat::ASTC_12X10_SRGB_BLOCK => "astc_12x10_srgb_block",
      HalaFormat::ASTC_12X12_UNORM_BLOCK => "astc_12x12_unorm_block",
      HalaFormat::ASTC_12X12_SRGB_BLOCK => "astc_12x12_srgb_block",
      _ => "default",
    };

    serializer.serialize_str(s)
  }
}

impl<'de> Deserialize<'de> for HalaFormat {
  fn deserialize<D>(deserializer: D) -> Result<HalaFormat, D::Error>
  where
    D: Deserializer<'de>,
  {
    struct HalaFormatVisitor;

    impl<'de> Visitor<'de> for HalaFormatVisitor {
      type Value = HalaFormat;

      fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {
        formatter.write_str("a string of format")
      }

      fn visit_str<E>(self, value: &str) -> Result<HalaFormat, E>
      where
        E: de::Error,
      {
        match value {
          "undefined" => Ok(HalaFormat::UNDEFINED),
          "UNDEFINED" => Ok(HalaFormat::UNDEFINED),
          "r4g4_unorm_pack8" => Ok(HalaFormat::R4G4_UNORM_PACK8),
          "R4G4_UNORM_PACK8" => Ok(HalaFormat::R4G4_UNORM_PACK8),
          "r4g4b4a4_unorm_pack16" => Ok(HalaFormat::R4G4B4A4_UNORM_PACK16),
          "R4G4B4A4_UNORM_PACK16" => Ok(HalaFormat::R4G4B4A4_UNORM_PACK16),
          "b4g4r4a4_unorm_pack16" => Ok(HalaFormat::B4G4R4A4_UNORM_PACK16),
          "B4G4R4A4_UNORM_PACK16" => Ok(HalaFormat::B4G4R4A4_UNORM_PACK16),
          "r5g6b5_unorm_pack16" => Ok(HalaFormat::R5G6B5_UNORM_PACK16),
          "R5G6B5_UNORM_PACK16" => Ok(HalaFormat::R5G6B5_UNORM_PACK16),
          "b5g6r5_unorm_pack16" => Ok(HalaFormat::B5G6R5_UNORM_PACK16),
          "B5G6R5_UNORM_PACK16" => Ok(HalaFormat::B5G6R5_UNORM_PACK16),
          "r5g5b5a1_unorm_pack16" => Ok(HalaFormat::R5G5B5A1_UNORM_PACK16),
          "R5G5B5A1_UNORM_PACK16" => Ok(HalaFormat::R5G5B5A1_UNORM_PACK16),
          "b5g5r5a1_unorm_pack16" => Ok(HalaFormat::B5G5R5A1_UNORM_PACK16),
          "B5G5R5A1_UNORM_PACK16" => Ok(HalaFormat::B5G5R5A1_UNORM_PACK16),
          "a1r5g5b5_unorm_pack16" => Ok(HalaFormat::A1R5G5B5_UNORM_PACK16),
          "A1R5G5B5_UNORM_PACK16" => Ok(HalaFormat::A1R5G5B5_UNORM_PACK16),
          "r8_unorm" => Ok(HalaFormat::R8_UNORM),
          "R8_UNORM" => Ok(HalaFormat::R8_UNORM),
          "r8_snorm" => Ok(HalaFormat::R8_SNORM),
          "R8_SNORM" => Ok(HalaFormat::R8_SNORM),
          "r8_uscales" => Ok(HalaFormat::R8_USCALED),
          "R8_USCALED" => Ok(HalaFormat::R8_USCALED),
          "r8_sscaled" => Ok(HalaFormat::R8_SSCALED),
          "R8_SSCALED" => Ok(HalaFormat::R8_SSCALED),
          "r8_uint" => Ok(HalaFormat::R8_UINT),
          "R8_UINT" => Ok(HalaFormat::R8_UINT),
          "r8_sint" => Ok(HalaFormat::R8_SINT),
          "R8_SINT" => Ok(HalaFormat::R8_SINT),
          "r8_srgb" => Ok(HalaFormat::R8_SRGB),
          "R8_SRGB" => Ok(HalaFormat::R8_SRGB),
          "r8g8_unorm" => Ok(HalaFormat::R8G8_UNORM),
          "R8G8_UNORM" => Ok(HalaFormat::R8G8_UNORM),
          "r8g8_snorm" => Ok(HalaFormat::R8G8_SNORM),
          "R8G8_SNORM" => Ok(HalaFormat::R8G8_SNORM),
          "r8g8_uscaled" => Ok(HalaFormat::R8G8_USCALED),
          "R8G8_USCALED" => Ok(HalaFormat::R8G8_USCALED),
          "r8g8_sscaled" => Ok(HalaFormat::R8G8_SSCALED),
          "R8G8_SSCALED" => Ok(HalaFormat::R8G8_SSCALED),
          "r8g8_uint" => Ok(HalaFormat::R8G8_UINT),
          "R8G8_UINT" => Ok(HalaFormat::R8G8_UINT),
          "r8g8_sint" => Ok(HalaFormat::R8G8_SINT),
          "R8G8_SINT" => Ok(HalaFormat::R8G8_SINT),
          "r8g8_srgb" => Ok(HalaFormat::R8G8_SRGB),
          "R8G8_SRGB" => Ok(HalaFormat::R8G8_SRGB),
          "r8g8b8_unorm" => Ok(HalaFormat::R8G8B8_UNORM),
          "R8G8B8_UNORM" => Ok(HalaFormat::R8G8B8_UNORM),
          "r8g8b8_snorm" => Ok(HalaFormat::R8G8B8_SNORM),
          "R8G8B8_SNORM" => Ok(HalaFormat::R8G8B8_SNORM),
          "r8g8b8_uscaled" => Ok(HalaFormat::R8G8B8_USCALED),
          "R8G8B8_USCALED" => Ok(HalaFormat::R8G8B8_USCALED),
          "r8g8b8_sscaled" => Ok(HalaFormat::R8G8B8_SSCALED),
          "R8G8B8_SSCALED" => Ok(HalaFormat::R8G8B8_SSCALED),
          "r8g8b8_uint" => Ok(HalaFormat::R8G8B8_UINT),
          "R8G8B8_UINT" => Ok(HalaFormat::R8G8B8_UINT),
          "r8g8b8_sint" => Ok(HalaFormat::R8G8B8_SINT),
          "R8G8B8_SINT" => Ok(HalaFormat::R8G8B8_SINT),
          "r8g8b8_srgb" => Ok(HalaFormat::R8G8B8_SRGB),
          "R8G8B8_SRGB" => Ok(HalaFormat::R8G8B8_SRGB),
          "b8g8r8_unorm" => Ok(HalaFormat::B8G8R8_UNORM),
          "B8G8R8_UNORM" => Ok(HalaFormat::B8G8R8_UNORM),
          "b8g8r8_snorm" => Ok(HalaFormat::B8G8R8_SNORM),
          "B8G8R8_SNORM" => Ok(HalaFormat::B8G8R8_SNORM),
          "b8g8r8_uscaled" => Ok(HalaFormat::B8G8R8_USCALED),
          "B8G8R8_USCALED" => Ok(HalaFormat::B8G8R8_USCALED),
          "b8g8r8_sscaled" => Ok(HalaFormat::B8G8R8_SSCALED),
          "B8G8R8_SSCALED" => Ok(HalaFormat::B8G8R8_SSCALED),
          "b8g8r8_uint" => Ok(HalaFormat::B8G8R8_UINT),
          "B8G8R8_UINT" => Ok(HalaFormat::B8G8R8_UINT),
          "b8g8r8_sint" => Ok(HalaFormat::B8G8R8_SINT),
          "B8G8R8_SINT" => Ok(HalaFormat::B8G8R8_SINT),
          "b8g8r8_srgb" => Ok(HalaFormat::B8G8R8_SRGB),
          "B8G8R8_SRGB" => Ok(HalaFormat::B8G8R8_SRGB),
          "r8g8b8a8_unorm" => Ok(HalaFormat::R8G8B8A8_UNORM),
          "R8G8B8A8_UNORM" => Ok(HalaFormat::R8G8B8A8_UNORM),
          "r8g8b8a8_snorm" => Ok(HalaFormat::R8G8B8A8_SNORM),
          "R8G8B8A8_SNORM" => Ok(HalaFormat::R8G8B8A8_SNORM),
          "r8g8b8a8_uscaled" => Ok(HalaFormat::R8G8B8A8_USCALED),
          "R8G8B8A8_USCALED" => Ok(HalaFormat::R8G8B8A8_USCALED),
          "r8g8b8a8_sscaled" => Ok(HalaFormat::R8G8B8A8_SSCALED),
          "R8G8B8A8_SSCALED" => Ok(HalaFormat::R8G8B8A8_SSCALED),
          "r8g8b8a8_uint" => Ok(HalaFormat::R8G8B8A8_UINT),
          "R8G8B8A8_UINT" => Ok(HalaFormat::R8G8B8A8_UINT),
          "r8g8b8a8_sint" => Ok(HalaFormat::R8G8B8A8_SINT),
          "R8G8B8A8_SINT" => Ok(HalaFormat::R8G8B8A8_SINT),
          "r8g8b8a8_srgb" => Ok(HalaFormat::R8G8B8A8_SRGB),
          "R8G8B8A8_SRGB" => Ok(HalaFormat::R8G8B8A8_SRGB),
          "b8g8r8a8_unorm" => Ok(HalaFormat::B8G8R8A8_UNORM),
          "B8G8R8A8_UNORM" => Ok(HalaFormat::B8G8R8A8_UNORM),
          "b8g8r8a8_snorm" => Ok(HalaFormat::B8G8R8A8_SNORM),
          "B8G8R8A8_SNORM" => Ok(HalaFormat::B8G8R8A8_SNORM),
          "b8g8r8a8_uscaled" => Ok(HalaFormat::B8G8R8A8_USCALED),
          "B8G8R8A8_USCALED" => Ok(HalaFormat::B8G8R8A8_USCALED),
          "b8g8r8a8_sscaled" => Ok(HalaFormat::B8G8R8A8_SSCALED),
          "B8G8R8A8_SSCALED" => Ok(HalaFormat::B8G8R8A8_SSCALED),
          "b8g8r8a8_uint" => Ok(HalaFormat::B8G8R8A8_UINT),
          "B8G8R8A8_UINT" => Ok(HalaFormat::B8G8R8A8_UINT),
          "b8g8r8a8_sint" => Ok(HalaFormat::B8G8R8A8_SINT),
          "B8G8R8A8_SINT" => Ok(HalaFormat::B8G8R8A8_SINT),
          "b8g8r8a8_srgb" => Ok(HalaFormat::B8G8R8A8_SRGB),
          "B8G8R8A8_SRGB" => Ok(HalaFormat::B8G8R8A8_SRGB),
          "a8b8g8r8_unorm_pack32" => Ok(HalaFormat::A8B8G8R8_UNORM_PACK32),
          "A8B8G8R8_UNORM_PACK32" => Ok(HalaFormat::A8B8G8R8_UNORM_PACK32),
          "a8b8g8r8_snorm_pack32" => Ok(HalaFormat::A8B8G8R8_SNORM_PACK32),
          "A8B8G8R8_SNORM_PACK32" => Ok(HalaFormat::A8B8G8R8_SNORM_PACK32),
          "a8b8g8r8_uscaled_pack32" => Ok(HalaFormat::A8B8G8R8_USCALED_PACK32),
          "A8B8G8R8_USCALED_PACK32" => Ok(HalaFormat::A8B8G8R8_USCALED_PACK32),
          "a8b8g8r8_sscaled_pack32" => Ok(HalaFormat::A8B8G8R8_SSCALED_PACK32),
          "A8B8G8R8_SSCALED_PACK32" => Ok(HalaFormat::A8B8G8R8_SSCALED_PACK32),
          "a8b8g8r8_uint_pack32" => Ok(HalaFormat::A8B8G8R8_UINT_PACK32),
          "A8B8G8R8_UINT_PACK32" => Ok(HalaFormat::A8B8G8R8_UINT_PACK32),
          "a8b8g8r8_sint_pack32" => Ok(HalaFormat::A8B8G8R8_SINT_PACK32),
          "A8B8G8R8_SINT_PACK32" => Ok(HalaFormat::A8B8G8R8_SINT_PACK32),
          "a8b8g8r8_srgb_pack32" => Ok(HalaFormat::A8B8G8R8_SRGB_PACK32),
          "A8B8G8R8_SRGB_PACK32" => Ok(HalaFormat::A8B8G8R8_SRGB_PACK32),
          "a2r10g10b10_unorm_pack32" => Ok(HalaFormat::A2R10G10B10_UNORM_PACK32),
          "A2R10G10B10_UNORM_PACK32" => Ok(HalaFormat::A2R10G10B10_UNORM_PACK32),
          "a2r10g10b10_snorm_pack32" => Ok(HalaFormat::A2R10G10B10_SNORM_PACK32),
          "A2R10G10B10_SNORM_PACK32" => Ok(HalaFormat::A2R10G10B10_SNORM_PACK32),
          "a2r10g10b10_uscaled_pack32" => Ok(HalaFormat::A2R10G10B10_USCALED_PACK32),
          "A2R10G10B10_USCALED_PACK32" => Ok(HalaFormat::A2R10G10B10_USCALED_PACK32),
          "a2r10g10b10_sscaled_pack32" => Ok(HalaFormat::A2R10G10B10_SSCALED_PACK32),
          "A2R10G10B10_SSCALED_PACK32" => Ok(HalaFormat::A2R10G10B10_SSCALED_PACK32),
          "a2r10g10b10_uint_pack32" => Ok(HalaFormat::A2R10G10B10_UINT_PACK32),
          "A2R10G10B10_UINT_PACK32" => Ok(HalaFormat::A2R10G10B10_UINT_PACK32),
          "a2r10g10b10_sint_pack32" => Ok(HalaFormat::A2R10G10B10_SINT_PACK32),
          "A2R10G10B10_SINT_PACK32" => Ok(HalaFormat::A2R10G10B10_SINT_PACK32),
          "a2b10g10r10_unorm_pack32" => Ok(HalaFormat::A2B10G10R10_UNORM_PACK32),
          "A2B10G10R10_UNORM_PACK32" => Ok(HalaFormat::A2B10G10R10_UNORM_PACK32),
          "a2b10g10r10_snorm_pack32" => Ok(HalaFormat::A2B10G10R10_SNORM_PACK32),
          "A2B10G10R10_SNORM_PACK32" => Ok(HalaFormat::A2B10G10R10_SNORM_PACK32),
          "a2b10g10r10_uscaled_pack32" => Ok(HalaFormat::A2B10G10R10_USCALED_PACK32),
          "A2B10G10R10_USCALED_PACK32" => Ok(HalaFormat::A2B10G10R10_USCALED_PACK32),
          "a2b10g10r10_sscaled_pack32" => Ok(HalaFormat::A2B10G10R10_SSCALED_PACK32),
          "A2B10G10R10_SSCALED_PACK32" => Ok(HalaFormat::A2B10G10R10_SSCALED_PACK32),
          "a2b10g10r10_uint_pack32" => Ok(HalaFormat::A2B10G10R10_UINT_PACK32),
          "A2B10G10R10_UINT_PACK32" => Ok(HalaFormat::A2B10G10R10_UINT_PACK32),
          "a2b10g10r10_sint_pack32" => Ok(HalaFormat::A2B10G10R10_SINT_PACK32),
          "A2B10G10R10_SINT_PACK32" => Ok(HalaFormat::A2B10G10R10_SINT_PACK32),
          "r16_unorm" => Ok(HalaFormat::R16_UNORM),
          "R16_UNORM" => Ok(HalaFormat::R16_UNORM),
          "r16_snorm" => Ok(HalaFormat::R16_SNORM),
          "R16_SNORM" => Ok(HalaFormat::R16_SNORM),
          "r16_uscaled" => Ok(HalaFormat::R16_USCALED),
          "R16_USCALED" => Ok(HalaFormat::R16_USCALED),
          "r16_sscaled" => Ok(HalaFormat::R16_SSCALED),
          "R16_SSCALED" => Ok(HalaFormat::R16_SSCALED),
          "r16_uint" => Ok(HalaFormat::R16_UINT),
          "R16_UINT" => Ok(HalaFormat::R16_UINT),
          "r16_sint" => Ok(HalaFormat::R16_SINT),
          "R16_SINT" => Ok(HalaFormat::R16_SINT),
          "r16_sfloat" => Ok(HalaFormat::R16_SFLOAT),
          "R16_SFLOAT" => Ok(HalaFormat::R16_SFLOAT),
          "r16g16_unorm" => Ok(HalaFormat::R16G16_UNORM),
          "R16G16_UNORM" => Ok(HalaFormat::R16G16_UNORM),
          "r16g16_snorm" => Ok(HalaFormat::R16G16_SNORM),
          "R16G16_SNORM" => Ok(HalaFormat::R16G16_SNORM),
          "r16g16_uscaled" => Ok(HalaFormat::R16G16_USCALED),
          "R16G16_USCALED" => Ok(HalaFormat::R16G16_USCALED),
          "r16g16_sscaled" => Ok(HalaFormat::R16G16_SSCALED),
          "R16G16_SSCALED" => Ok(HalaFormat::R16G16_SSCALED),
          "r16g16_uint" => Ok(HalaFormat::R16G16_UINT),
          "R16G16_UINT" => Ok(HalaFormat::R16G16_UINT),
          "r16g16_sint" => Ok(HalaFormat::R16G16_SINT),
          "R16G16_SINT" => Ok(HalaFormat::R16G16_SINT),
          "r16g16_sfloat" => Ok(HalaFormat::R16G16_SFLOAT),
          "R16G16_SFLOAT" => Ok(HalaFormat::R16G16_SFLOAT),
          "r16g16b16_unorm" => Ok(HalaFormat::R16G16B16_UNORM),
          "R16G16B16_UNORM" => Ok(HalaFormat::R16G16B16_UNORM),
          "r16g16b16_snorm" => Ok(HalaFormat::R16G16B16_SNORM),
          "R16G16B16_SNORM" => Ok(HalaFormat::R16G16B16_SNORM),
          "r16g16b16_uscaled" => Ok(HalaFormat::R16G16B16_USCALED),
          "R16G16B16_USCALED" => Ok(HalaFormat::R16G16B16_USCALED),
          "r16g16b16_sscaled" => Ok(HalaFormat::R16G16B16_SSCALED),
          "R16G16B16_SSCALED" => Ok(HalaFormat::R16G16B16_SSCALED),
          "r16g16b16_uint" => Ok(HalaFormat::R16G16B16_UINT),
          "R16G16B16_UINT" => Ok(HalaFormat::R16G16B16_UINT),
          "r16g16b16_sint" => Ok(HalaFormat::R16G16B16_SINT),
          "R16G16B16_SINT" => Ok(HalaFormat::R16G16B16_SINT),
          "r16g16b16_sfloat" => Ok(HalaFormat::R16G16B16_SFLOAT),
          "R16G16B16_SFLOAT" => Ok(HalaFormat::R16G16B16_SFLOAT),
          "r16g16b16a16_unorm" => Ok(HalaFormat::R16G16B16A16_UNORM),
          "R16G16B16A16_UNORM" => Ok(HalaFormat::R16G16B16A16_UNORM),
          "r16g16b16a16_snorm" => Ok(HalaFormat::R16G16B16A16_SNORM),
          "R16G16B16A16_SNORM" => Ok(HalaFormat::R16G16B16A16_SNORM),
          "r16g16b16a16_uscaled" => Ok(HalaFormat::R16G16B16A16_USCALED),
          "R16G16B16A16_USCALED" => Ok(HalaFormat::R16G16B16A16_USCALED),
          "r16g16b16a16_sscaled" => Ok(HalaFormat::R16G16B16A16_SSCALED),
          "R16G16B16A16_SSCALED" => Ok(HalaFormat::R16G16B16A16_SSCALED),
          "r16g16b16a16_uint" => Ok(HalaFormat::R16G16B16A16_UINT),
          "R16G16B16A16_UINT" => Ok(HalaFormat::R16G16B16A16_UINT),
          "r16g16b16a16_sint" => Ok(HalaFormat::R16G16B16A16_SINT),
          "R16G16B16A16_SINT" => Ok(HalaFormat::R16G16B16A16_SINT),
          "r16g16b16a16_sfloat" => Ok(HalaFormat::R16G16B16A16_SFLOAT),
          "R16G16B16A16_SFLOAT" => Ok(HalaFormat::R16G16B16A16_SFLOAT),
          "r32_uint" => Ok(HalaFormat::R32_UINT),
          "R32_UINT" => Ok(HalaFormat::R32_UINT),
          "r32_sint" => Ok(HalaFormat::R32_SINT),
          "R32_SINT" => Ok(HalaFormat::R32_SINT),
          "r32_sfloat" => Ok(HalaFormat::R32_SFLOAT),
          "R32_SFLOAT" => Ok(HalaFormat::R32_SFLOAT),
          "r32g32_uint" => Ok(HalaFormat::R32G32_UINT),
          "R32G32_UINT" => Ok(HalaFormat::R32G32_UINT),
          "r32g32_sint" => Ok(HalaFormat::R32G32_SINT),
          "R32G32_SINT" => Ok(HalaFormat::R32G32_SINT),
          "r32g32_sfloat" => Ok(HalaFormat::R32G32_SFLOAT),
          "R32G32_SFLOAT" => Ok(HalaFormat::R32G32_SFLOAT),
          "r32g32b32_uint" => Ok(HalaFormat::R32G32B32_UINT),
          "R32G32B32_UINT" => Ok(HalaFormat::R32G32B32_UINT),
          "r32g32b32_sint" => Ok(HalaFormat::R32G32B32_SINT),
          "R32G32B32_SINT" => Ok(HalaFormat::R32G32B32_SINT),
          "r32g32b32_sfloat" => Ok(HalaFormat::R32G32B32_SFLOAT),
          "R32G32B32_SFLOAT" => Ok(HalaFormat::R32G32B32_SFLOAT),
          "r32g32b32a32_uint" => Ok(HalaFormat::R32G32B32A32_UINT),
          "R32G32B32A32_UINT" => Ok(HalaFormat::R32G32B32A32_UINT),
          "r32g32b32a32_sint" => Ok(HalaFormat::R32G32B32A32_SINT),
          "R32G32B32A32_SINT" => Ok(HalaFormat::R32G32B32A32_SINT),
          "r32g32b32a32_sfloat" => Ok(HalaFormat::R32G32B32A32_SFLOAT),
          "R32G32B32A32_SFLOAT" => Ok(HalaFormat::R32G32B32A32_SFLOAT),
          "r64_uint" => Ok(HalaFormat::R64_UINT),
          "R64_UINT" => Ok(HalaFormat::R64_UINT),
          "r64_sint" => Ok(HalaFormat::R64_SINT),
          "R64_SINT" => Ok(HalaFormat::R64_SINT),
          "r64_sfloat" => Ok(HalaFormat::R64_SFLOAT),
          "R64_SFLOAT" => Ok(HalaFormat::R64_SFLOAT),
          "r64g64_uint" => Ok(HalaFormat::R64G64_UINT),
          "R64G64_UINT" => Ok(HalaFormat::R64G64_UINT),
          "r64g64_sint" => Ok(HalaFormat::R64G64_SINT),
          "R64G64_SINT" => Ok(HalaFormat::R64G64_SINT),
          "r64g64_sfloat" => Ok(HalaFormat::R64G64_SFLOAT),
          "R64G64_SFLOAT" => Ok(HalaFormat::R64G64_SFLOAT),
          "r64g64b64_uint" => Ok(HalaFormat::R64G64B64_UINT),
          "R64G64B64_UINT" => Ok(HalaFormat::R64G64B64_UINT),
          "r64g64b64_sint" => Ok(HalaFormat::R64G64B64_SINT),
          "R64G64B64_SINT" => Ok(HalaFormat::R64G64B64_SINT),
          "r64g64b64_sfloat" => Ok(HalaFormat::R64G64B64_SFLOAT),
          "R64G64B64_SFLOAT" => Ok(HalaFormat::R64G64B64_SFLOAT),
          "r64g64b64a64_uint" => Ok(HalaFormat::R64G64B64A64_UINT),
          "R64G64B64A64_UINT" => Ok(HalaFormat::R64G64B64A64_UINT),
          "r64g64b64a64_sint" => Ok(HalaFormat::R64G64B64A64_SINT),
          "R64G64B64A64_SINT" => Ok(HalaFormat::R64G64B64A64_SINT),
          "r64g64b64a64_sfloat" => Ok(HalaFormat::R64G64B64A64_SFLOAT),
          "R64G64B64A64_SFLOAT" => Ok(HalaFormat::R64G64B64A64_SFLOAT),
          "b10g11r11_ufloat_pack32" => Ok(HalaFormat::B10G11R11_UFLOAT_PACK32),
          "B10G11R11_UFLOAT_PACK32" => Ok(HalaFormat::B10G11R11_UFLOAT_PACK32),
          "e5b9g9r9_ufloat_pack32" => Ok(HalaFormat::E5B9G9R9_UFLOAT_PACK32),
          "E5B9G9R9_UFLOAT_PACK32" => Ok(HalaFormat::E5B9G9R9_UFLOAT_PACK32),
          "d16_unorm" => Ok(HalaFormat::D16_UNORM),
          "D16_UNORM" => Ok(HalaFormat::D16_UNORM),
          "x8_d24_unorm_pack32" => Ok(HalaFormat::X8_D24_UNORM_PACK32),
          "X8_D24_UNORM_PACK32" => Ok(HalaFormat::X8_D24_UNORM_PACK32),
          "d32_sfloat" => Ok(HalaFormat::D32_SFLOAT),
          "D32_SFLOAT" => Ok(HalaFormat::D32_SFLOAT),
          "s8_uint" => Ok(HalaFormat::S8_UINT),
          "S8_UINT" => Ok(HalaFormat::S8_UINT),
          "d16_unorm_s8_uint" => Ok(HalaFormat::D16_UNORM_S8_UINT),
          "D16_UNORM_S8_UINT" => Ok(HalaFormat::D16_UNORM_S8_UINT),
          "d24_unorm_s8_uint" => Ok(HalaFormat::D24_UNORM_S8_UINT),
          "D24_UNORM_S8_UINT" => Ok(HalaFormat::D24_UNORM_S8_UINT),
          "d32_sfloat_s8_uint" => Ok(HalaFormat::D32_SFLOAT_S8_UINT),
          "D32_SFLOAT_S8_UINT" => Ok(HalaFormat::D32_SFLOAT_S8_UINT),
          "bc1_rgb_unorm_block" => Ok(HalaFormat::BC1_RGB_UNORM_BLOCK),
          "BC1_RGB_UNORM_BLOCK" => Ok(HalaFormat::BC1_RGB_UNORM_BLOCK),
          "bc1_rgb_srgb_block" => Ok(HalaFormat::BC1_RGB_SRGB_BLOCK),
          "BC1_RGB_SRGB_BLOCK" => Ok(HalaFormat::BC1_RGB_SRGB_BLOCK),
          "bc1_rgba_unorm_block" => Ok(HalaFormat::BC1_RGBA_UNORM_BLOCK),
          "BC1_RGBA_UNORM_BLOCK" => Ok(HalaFormat::BC1_RGBA_UNORM_BLOCK),
          "bc1_rgba_srgb_block" => Ok(HalaFormat::BC1_RGBA_SRGB_BLOCK),
          "BC1_RGBA_SRGB_BLOCK" => Ok(HalaFormat::BC1_RGBA_SRGB_BLOCK),
          "bc2_unorm_block" => Ok(HalaFormat::BC2_UNORM_BLOCK),
          "BC2_UNORM_BLOCK" => Ok(HalaFormat::BC2_UNORM_BLOCK),
          "bc2_srgb_block" => Ok(HalaFormat::BC2_SRGB_BLOCK),
          "BC2_SRGB_BLOCK" => Ok(HalaFormat::BC2_SRGB_BLOCK),
          "bc3_unorm_block" => Ok(HalaFormat::BC3_UNORM_BLOCK),
          "BC3_UNORM_BLOCK" => Ok(HalaFormat::BC3_UNORM_BLOCK),
          "bc3_srgb_block" => Ok(HalaFormat::BC3_SRGB_BLOCK),
          "BC3_SRGB_BLOCK" => Ok(HalaFormat::BC3_SRGB_BLOCK),
          "bc4_unorm_block" => Ok(HalaFormat::BC4_UNORM_BLOCK),
          "BC4_UNORM_BLOCK" => Ok(HalaFormat::BC4_UNORM_BLOCK),
          "bc4_snorm_block" => Ok(HalaFormat::BC4_SNORM_BLOCK),
          "BC4_SNORM_BLOCK" => Ok(HalaFormat::BC4_SNORM_BLOCK),
          "bc5_unorm_block" => Ok(HalaFormat::BC5_UNORM_BLOCK),
          "BC5_UNORM_BLOCK" => Ok(HalaFormat::BC5_UNORM_BLOCK),
          "bc5_snorm_block" => Ok(HalaFormat::BC5_SNORM_BLOCK),
          "BC5_SNORM_BLOCK" => Ok(HalaFormat::BC5_SNORM_BLOCK),
          "bc6h_ufloat_block" => Ok(HalaFormat::BC6H_UFLOAT_BLOCK),
          "BC6H_UFLOAT_BLOCK" => Ok(HalaFormat::BC6H_UFLOAT_BLOCK),
          "bc6h_sfloat_block" => Ok(HalaFormat::BC6H_SFLOAT_BLOCK),
          "BC6H_SFLOAT_BLOCK" => Ok(HalaFormat::BC6H_SFLOAT_BLOCK),
          "bc7_unorm_block" => Ok(HalaFormat::BC7_UNORM_BLOCK),
          "BC7_UNORM_BLOCK" => Ok(HalaFormat::BC7_UNORM_BLOCK),
          "bc7_srgb_block" => Ok(HalaFormat::BC7_SRGB_BLOCK),
          "BC7_SRGB_BLOCK" => Ok(HalaFormat::BC7_SRGB_BLOCK),
          "etc2_r8g8b8_unorm_block" => Ok(HalaFormat::ETC2_R8G8B8_UNORM_BLOCK),
          "ETC2_R8G8B8_UNORM_BLOCK" => Ok(HalaFormat::ETC2_R8G8B8_UNORM_BLOCK),
          "etc2_r8g8b8_srgb_block" => Ok(HalaFormat::ETC2_R8G8B8_SRGB_BLOCK),
          "ETC2_R8G8B8_SRGB_BLOCK" => Ok(HalaFormat::ETC2_R8G8B8_SRGB_BLOCK),
          "etc2_r8g8b8a1_unorm_block" => Ok(HalaFormat::ETC2_R8G8B8A1_UNORM_BLOCK),
          "ETC2_R8G8B8A1_UNORM_BLOCK" => Ok(HalaFormat::ETC2_R8G8B8A1_UNORM_BLOCK),
          "etc2_r8g8b8a1_srgb_block" => Ok(HalaFormat::ETC2_R8G8B8A1_SRGB_BLOCK),
          "ETC2_R8G8B8A1_SRGB_BLOCK" => Ok(HalaFormat::ETC2_R8G8B8A1_SRGB_BLOCK),
          "etc2_r8g8b8a8_unorm_block" => Ok(HalaFormat::ETC2_R8G8B8A8_UNORM_BLOCK),
          "ETC2_R8G8B8A8_UNORM_BLOCK" => Ok(HalaFormat::ETC2_R8G8B8A8_UNORM_BLOCK),
          "etc2_r8g8b8a8_srgb_block" => Ok(HalaFormat::ETC2_R8G8B8A8_SRGB_BLOCK),
          "ETC2_R8G8B8A8_SRGB_BLOCK" => Ok(HalaFormat::ETC2_R8G8B8A8_SRGB_BLOCK),
          "eac_r11_unorm_block" => Ok(HalaFormat::EAC_R11_UNORM_BLOCK),
          "EAC_R11_UNORM_BLOCK" => Ok(HalaFormat::EAC_R11_UNORM_BLOCK),
          "eac_r11_snorm_block" => Ok(HalaFormat::EAC_R11_SNORM_BLOCK),
          "EAC_R11_SNORM_BLOCK" => Ok(HalaFormat::EAC_R11_SNORM_BLOCK),
          "eac_r11g11_unorm_block" => Ok(HalaFormat::EAC_R11G11_UNORM_BLOCK),
          "EAC_R11G11_UNORM_BLOCK" => Ok(HalaFormat::EAC_R11G11_UNORM_BLOCK),
          "eac_r11g11_snorm_block" => Ok(HalaFormat::EAC_R11G11_SNORM_BLOCK),
          "EAC_R11G11_SNORM_BLOCK" => Ok(HalaFormat::EAC_R11G11_SNORM_BLOCK),
          "astc_4x4_unorm_block" => Ok(HalaFormat::ASTC_4X4_UNORM_BLOCK),
          "ASTC_4X4_UNORM_BLOCK" => Ok(HalaFormat::ASTC_4X4_UNORM_BLOCK),
          "astc_4x4_srgb_block" => Ok(HalaFormat::ASTC_4X4_SRGB_BLOCK),
          "ASTC_4X4_SRGB_BLOCK" => Ok(HalaFormat::ASTC_4X4_SRGB_BLOCK),
          "astc_5x4_unorm_block" => Ok(HalaFormat::ASTC_5X4_UNORM_BLOCK),
          "ASTC_5X4_UNORM_BLOCK" => Ok(HalaFormat::ASTC_5X4_UNORM_BLOCK),
          "astc_5x4_srgb_block" => Ok(HalaFormat::ASTC_5X4_SRGB_BLOCK),
          "ASTC_5X4_SRGB_BLOCK" => Ok(HalaFormat::ASTC_5X4_SRGB_BLOCK),
          "astc_5x5_unorm_block" => Ok(HalaFormat::ASTC_5X5_UNORM_BLOCK),
          "ASTC_5X5_UNORM_BLOCK" => Ok(HalaFormat::ASTC_5X5_UNORM_BLOCK),
          "astc_5x5_srgb_block" => Ok(HalaFormat::ASTC_5X5_SRGB_BLOCK),
          "ASTC_5X5_SRGB_BLOCK" => Ok(HalaFormat::ASTC_5X5_SRGB_BLOCK),
          "astc_6x5_unorm_block" => Ok(HalaFormat::ASTC_6X5_UNORM_BLOCK),
          "ASTC_6X5_UNORM_BLOCK" => Ok(HalaFormat::ASTC_6X5_UNORM_BLOCK),
          "astc_6x5_srgb_block" => Ok(HalaFormat::ASTC_6X5_SRGB_BLOCK),
          "ASTC_6X5_SRGB_BLOCK" => Ok(HalaFormat::ASTC_6X5_SRGB_BLOCK),
          "astc_6x6_unorm_block" => Ok(HalaFormat::ASTC_6X6_UNORM_BLOCK),
          "ASTC_6X6_UNORM_BLOCK" => Ok(HalaFormat::ASTC_6X6_UNORM_BLOCK),
          "astc_6x6_srgb_block" => Ok(HalaFormat::ASTC_6X6_SRGB_BLOCK),
          "ASTC_6X6_SRGB_BLOCK" => Ok(HalaFormat::ASTC_6X6_SRGB_BLOCK),
          "astc_8x5_unorm_block" => Ok(HalaFormat::ASTC_8X5_UNORM_BLOCK),
          "ASTC_8X5_UNORM_BLOCK" => Ok(HalaFormat::ASTC_8X5_UNORM_BLOCK),
          "astc_8x5_srgb_block" => Ok(HalaFormat::ASTC_8X5_SRGB_BLOCK),
          "ASTC_8X5_SRGB_BLOCK" => Ok(HalaFormat::ASTC_8X5_SRGB_BLOCK),
          "astc_8x6_unorm_block" => Ok(HalaFormat::ASTC_8X6_UNORM_BLOCK),
          "ASTC_8X6_UNORM_BLOCK" => Ok(HalaFormat::ASTC_8X6_UNORM_BLOCK),
          "astc_8x6_srgb_block" => Ok(HalaFormat::ASTC_8X6_SRGB_BLOCK),
          "ASTC_8X6_SRGB_BLOCK" => Ok(HalaFormat::ASTC_8X6_SRGB_BLOCK),
          "astc_8x8_unorm_block" => Ok(HalaFormat::ASTC_8X8_UNORM_BLOCK),
          "ASTC_8X8_UNORM_BLOCK" => Ok(HalaFormat::ASTC_8X8_UNORM_BLOCK),
          "astc_8x8_srgb_block" => Ok(HalaFormat::ASTC_8X8_SRGB_BLOCK),
          "ASTC_8X8_SRGB_BLOCK" => Ok(HalaFormat::ASTC_8X8_SRGB_BLOCK),
          "astc_10x5_unorm_block" => Ok(HalaFormat::ASTC_10X5_UNORM_BLOCK),
          "ASTC_10X5_UNORM_BLOCK" => Ok(HalaFormat::ASTC_10X5_UNORM_BLOCK),
          "astc_10x5_srgb_block" => Ok(HalaFormat::ASTC_10X5_SRGB_BLOCK),
          "ASTC_10X5_SRGB_BLOCK" => Ok(HalaFormat::ASTC_10X5_SRGB_BLOCK),
          "astc_10x6_unorm_block" => Ok(HalaFormat::ASTC_10X6_UNORM_BLOCK),
          "ASTC_10X6_UNORM_BLOCK" => Ok(HalaFormat::ASTC_10X6_UNORM_BLOCK),
          "astc_10x6_srgb_block" => Ok(HalaFormat::ASTC_10X6_SRGB_BLOCK),
          "ASTC_10X6_SRGB_BLOCK" => Ok(HalaFormat::ASTC_10X6_SRGB_BLOCK),
          "astc_10x8_unorm_block" => Ok(HalaFormat::ASTC_10X8_UNORM_BLOCK),
          "ASTC_10X8_UNORM_BLOCK" => Ok(HalaFormat::ASTC_10X8_UNORM_BLOCK),
          "astc_10x8_srgb_block" => Ok(HalaFormat::ASTC_10X8_SRGB_BLOCK),
          "ASTC_10X8_SRGB_BLOCK" => Ok(HalaFormat::ASTC_10X8_SRGB_BLOCK),
          "astc_10x10_unorm_block" => Ok(HalaFormat::ASTC_10X10_UNORM_BLOCK),
          "ASTC_10X10_UNORM_BLOCK" => Ok(HalaFormat::ASTC_10X10_UNORM_BLOCK),
          "astc_10x10_srgb_block" => Ok(HalaFormat::ASTC_10X10_SRGB_BLOCK),
          "ASTC_10X10_SRGB_BLOCK" => Ok(HalaFormat::ASTC_10X10_SRGB_BLOCK),
          "astc_12x10_unorm_block" => Ok(HalaFormat::ASTC_12X10_UNORM_BLOCK),
          "ASTC_12X10_UNORM_BLOCK" => Ok(HalaFormat::ASTC_12X10_UNORM_BLOCK),
          "astc_12x10_srgb_block" => Ok(HalaFormat::ASTC_12X10_SRGB_BLOCK),
          "ASTC_12X10_SRGB_BLOCK" => Ok(HalaFormat::ASTC_12X10_SRGB_BLOCK),
          "astc_12x12_unorm_block" => Ok(HalaFormat::ASTC_12X12_UNORM_BLOCK),
          "ASTC_12X12_UNORM_BLOCK" => Ok(HalaFormat::ASTC_12X12_UNORM_BLOCK),
          "astc_12x12_srgb_block" => Ok(HalaFormat::ASTC_12X12_SRGB_BLOCK),
          "ASTC_12X12_SRGB_BLOCK" => Ok(HalaFormat::ASTC_12X12_SRGB_BLOCK),
          "default" => Ok(HalaFormat::default()),
          _ => Err(de::Error::invalid_value(Unexpected::Str(value), &"a format")),
        }
      }
    }

    deserializer.deserialize_str(HalaFormatVisitor)
  }
}